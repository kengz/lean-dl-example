# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: lint and test

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

permissions:
  contents: read
  checks: write
  pull-requests: write

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install Flake8
        run: pip install flake8
      - name: Run linter with PR code review
        uses: wearerequired/lint-action@v2
        with:
          flake8: true
          flake8_args: --ignore=E501

  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: Install poetry
        uses: abatilo/actions-poetry@v2
      - uses: actions/cache@v3
        name: Define a cache for the virtual environment based on the dependencies lock file
        with:
          path: ./.venv
          key: venv-${{ hashFiles('poetry.lock') }}
      - name: Install the project dependencies
        run: poetry install

      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3
      - name: Test with pytest
        timeout-minutes: 1
        run: | # use pipefail to capture pytest exit code
          set -o pipefail
          poetry run pytest | tee pytest-coverage.txt
      - name: pytest-coverage-commentator
        uses: coroo/pytest-coverage-commentator@v1.0.2
        with:
          pytest-coverage: pytest-coverage.txt
